IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)
  FIND_PACKAGE(Git)
  IF(GIT_FOUND)
	EXECUTE_PROCESS(
	  COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD
	  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
	  OUTPUT_VARIABLE "BUILD_VERSION"
	  ERROR_QUIET
	  OUTPUT_STRIP_TRAILING_WHITESPACE)
	MESSAGE( STATUS "Git version: ${BUILD_VERSION}" )
  ELSE(GIT_FOUND)
	SET(BUILD_VERSION "unknown")
  ENDIF(GIT_FOUND)
  add_compile_definitions( SOURCE_CONTROL_REVISION="${BUILD_VERSION}" )
ENDIF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)

message( "Setting compiler specific options - for ${CMAKE_CXX_COMPILER_ID}" )
if( MSVC )
	add_definitions( -DNOMINMAX -DD_WIN32_WINNT=0x0601 )
	add_compile_options( /permissive- )
else( )
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -DNDEBUG")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -DDEBUG")

	#set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fsanitize=address")
	#set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fsanitize=thread")
	#set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fsanitize=undefined")

	#set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address")
	#set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=thread")
	#set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=undefined")

    add_compile_options( -march=native -pthread )

	# GCC/Clang warning options
	if( ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang" OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "AppleClang" )
		add_compile_options( -Weverything -Wextra -pedantic -Wno-c++98-compat -Wno-covered-switch-default -Wnull-dereference -Wno-return-std-move-in-c++11 -Wno-exit-time-destructors -Wno-c++98-compat-pedantic -Wno-missing-prototypes -Wno-disabled-macro-expansion -Wno-missing-braces )
	    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wno-padded" )
	    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wno-padded" )
	elseif( ${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU" )
		add_compile_options( -Wall -Wextra -pedantic -Wno-deprecated-declarations -Wduplicated-cond -Wlogical-op -Wnull-dereference -Wold-style-cast -Wshadow )
	endif( )
endif( )

